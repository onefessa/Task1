#include <iostream>
#include <fstream>
#include <cmath>
using namespace std;
///h_new = h * min(facmax, max(facmin, fac * (tol/err)^(1/6.)));

void RK_Dinamical (){
    //const double pi = 3.141592653589793;
    double k1,l1,k2,l2, k3,l3,k4,l4,k5,l5,k6,l6,k7,l7, x_K, z_K,T,x_kk, z_kk, t, tol, N_st = 1, eps_1, x, z,h;
    double x_1, z_1, x_2, z_2, x_3, z_3, eps_2, err, sum;
    ofstream output ("7.txt");
    cout <<"j  T               x-sin(T)    z-cos(T)           N_st        Step=sum/N_st"<<endl;
    //ofstream output1 ("7.1.txt");
    for (int j=0; j < 3; j++){
        T = M_PI*pow(10,1+j);
        output << "\n"<<"T = "<<pow(10,1+j)<<"PI"<<endl;
        output << "|x-sin(T)  ||  |z-cos(T)|  ||  N_st"<<"\t"<<"Step=sum/N_st"<<endl;
        for (int i=0;i<3;i++){
            tol = 1./pow(10,4+2*i);  ///h = 0.1;     xz = RK(0, 1, T, h);
            t = 0;
            x=0;
            z=1;
            h= 0.1;
            sum=h;
            while(t<T){
                ///t += h; cout<<t<<" "<<i<<endl;
                //cout<<t<<endl;
                k1 = z;
                l1 = -x;
                k2 = z + (1/5.)*h*l1;
                l2 = -(x + (1/5.)*h*k1);
                k3 = (z +h*((3/40.)*l1 + (9/40.)*l2));
                l3 = -(x +h*((3/40.)*k1 + (9/40.)*k2));
                k4 = z + h*((44/45.)*l1 - (56/15.)*l2 + (32/9.)*l3);
                l4 = -(x +h*((44/45.)*k1 - (56/15.)*k2 + (32/9.)*k3));
                k5 = z + h*((19372/6561.)*l1 - (25360/2187.)*l2 + (64448/6561.)*l3 - (212/729.)*l4);
                l5 = -(x +h*((19372/6561.)*k1 - (25360/2187.)*k2 + (64448/6561.)*k3 - (212/729.)*k4));
                k6 = z + h*((9017/3168.)*l1 - (355/33.)*l2 + (46732/5247.)*l3 +(49/176.)*l4 -(5103/18656.)*l5);
                l6 = -(x + h*((9017/3168.)*k1 - (355/33.)*k2 + (46732/5247.)*k3 +(49/176.)*k4 -(5103/18656.)*k5));
                k7 = (z + (35/384.)*l1 + (500/1113.)*l3 + (125/192.)*l4 - (2187/6784.)*l5 + (11/84.)*l6);
                l7 = -(x + (35/384.)*k1 + (500/1113.)*k3 + (125/192.)*k4 - (2187/6784.)*k5 + (11/84.)*k6);

                x_K = x + h*((35/384.)*k1 + (500/1113.)*k3 + (125/192.)*k4 - (2187/6784.)*k5 + (11/84.)*k6);
                z_K = z + h*((35/384.)*l1 + (500/1113.)*l3 + (125/192.)*l4 - (2187/6784.)*l5 + (11/84.)*l6);
                x_kk = x + h*((5179/57600.)*k1 + (7571/16695.)*k3 + (393/640.)*k4 + (-92097/339200.)*k5 + (187/2100.)*k6+(1/40.)*k7);
                z_kk = z + h*((5179/57600.)*l1 + (7571/16695.)*l3 + (393/640.)*l4 + (-92097/339200.)*l5 + (187/2100.)*l6+(1/40.)*l7);

                eps_1=abs(x_K-x_kk);
                eps_2=abs(z_K-z_kk);
                //(eps_1-eps_2)>0 ? (err = eps_1) : (err = eps_2);
                err=fmax(eps_1,eps_2);

                if(err>=tol){
                    h = h*fmin(1.5, fmax(0.7, 0.9*pow(tol/err, 1./6)));
                }else{
                    t += h;
                    sum += h;
                    N_st++;
                    h = h*fmin(1.5, fmax(0.7, 0.9*pow(tol/err, 1./6)));
                    if(t<T){
                        x=x_K;
                        z=z_K;
                    }
                }
                if (t>T){

                    t -= h;///Последний шаг, одновременно проверка, что не выскочили за пределы отрезка
                    h = T - t;

                    k1 = z;
                    l1 = -x;
                    k2 = z + (1/5.)*h*l1;
                    l2 = -(x + (1/5.)*h*k1);
                    k3 = (z +h*((3/40.)*l1 + (9/40.)*l2));
                    l3 = -(x +h*((3/40.)*k1 + (9/40.)*k2));
                    k4 = z + h*((44/45.)*l1 - (56/15.)*l2 + (32/9.)*l3);
                    l4 = -(x +h*((44/45.)*k1 - (56/15.)*k2 + (32/9.)*k3));
                    k5 = z + h*((19372/6561.)*l1 - (25360/2187.)*l2 + (64448/6561.)*l3 - (212/729.)*l4);
                    l5 = -(x +h*((19372/6561.)*k1 - (25360/2187.)*k2 + (64448/6561.)*k3 - (212/729.)*k4));
                    k6 = z + h*((9017/3168.)*l1 - (355/33.)*l2 + (46732/5247.)*l3 +(49/176.)*l4 -(5103/18656.)*l5);
                    l6 = -(x + h*((9017/3168.)*k1 - (355/33.)*k2 + (46732/5247.)*k3 +(49/176.)*k4 -(5103/18656.)*k5));
                    //k7 = (z + (35/384.)*l1 + (500/1113.)*l3 + (125/192.)*l4 - (2187/6784.)*l5 + (11/84.)*l6);
                    //l7 = -(x + (35/384.)*k1 + (500/1113.)*k3 + (125/192.)*k4 - (2187/6784.)*k5 + (11/84.)*k6);
                    x_K = x + h*((35/384.)*k1 + (500/1113.)*k3 + (125/192.)*k4 - (2187/6784.)*k5 + (11/84.)*k6);
                    z_K = z + h*((35/384.)*l1 + (500/1113.)*l3 + (125/192.)*l4 - (2187/6784.)*l5 + (11/84.)*l6);
                    x=x_K;
                    z=z_K;
                    t = T;
                    }
            }
            if(i==0){
                x_1=x;
                z_1=z;
            }
            if(i==1){
                x_2=x;
                z_2=z;
            }
            if(i==2){
                x_3=x;
                z_3=z;
            }
            output<< abs(x-sin(T))<<"\t"<< abs(z-cos(T))<<"\t"<< N_st<<"\t"<< sum/N_st<<endl;
            cout<<j<<" "<<T<<"\t"<< abs(x-sin(T))<<"\t"<< abs(z-cos(T))<<"\t"<< N_st<<"\t"<< sum/N_st<<endl;
        }
        //output1<< "dx = "<<abs(x - sin(T))<<"; dz = "<< abs(z - cos(T))<<"; N_st = "<< N_st<<"; sum/N_st = " << sum/N_st <<endl;
    cout<< abs((x_1 - x_2)/(x_2-x_3))<<";  "<< abs((z_1 - z_2)/(z_2-z_3)) << "\n"<<endl;
    output<< "|(x_1 - x_2)/(x_2-x_3)| = "<<abs((x_1 - x_2)/(x_2-x_3))<<"; |(z_1 - z_2)/(z_2-z_3)| "<< abs((z_1 - z_2)/(z_2-z_3)) <<endl;
    }
}


void task7 (){
    cout<<"\nTask 7\n"<<endl;
    RK_Dinamical();
}
